; test pattern for all colors of BK0011(M)
; screen details: 12MHz pixel clock
;                 768 pix clk in line / 512 with memory data
;                 320 lines / 256 with memory data
;                 1200(8) 640(10) inner processor timer ticks / 2 ticks per line

@include aloader.mac

Main:	; colored columns
	mov	#40000, R1
	mov	#C_SCRWID/8., R5
20$:	mov	#^B0000000000000000, R0
	call	DrCol
	mov	#^B0101010101010101, R0
	call	DrCol
	mov	#^B1010101010101010, R0
	call	DrCol
	mov	#^B1111111111111111, R0
	call	DrCol
	sob	R5, 20$
	; draw horizontal border
	mov	#40000, R1
	mov	#C_SCRWID, R3
30$:	movb	#^B11111111, 40000-C_SCRWID(R1)
	movb	#^B11111111, (R1)+
	sob	R3, 30$
	; draw vertical border
	mov	#40000, R1
	mov	#256., R3
40$:	bisb	#^B11, (R1)
	bisb	#^B11000000, C_SCRWID-1(R1)
	add	#C_SCRWID, R1
	sob	R3, 40$	

	; BK0011(M) can continue with palette changes
	tst	@#100
	bne	Timer

	; BK0010 wait keypress and exit
	tst	KeyCur
	beq	.-4
	jmp	Exit

; change palettes every 16. lines
Timer:	mov	#177710, R0
10$:	clr	R5
	mov	10$, VsyUsr			; modify vsync interrupt to clear R5
20$:	bit	#^B11111, (R0)			; wait for 16.-th line
	bne	20$
	movb	Pals(R5), @#177663
	inc	R5
	tst	KeyCur
	beq	20$
	jmp	Exit


; draw colored column
; R0 - color, R1 - vaddr
DrCol:	mov	#256., R3
	mov	#C_SCRWID, R2
10$:	mov	R0, (R1)
	add	R2, R1
	sob	R3, 10$
	sub	#256.*C_SCRWID-2, R1
	return


Pals:	; off-screen palettes
	.byte	^B00000000, ^B00000000, ^B00000000
	; 16. main palettes
	.byte	^B00000000, ^B00000001, ^B00000010, ^B00000011
	.byte	^B00000100, ^B00000101, ^B00000110, ^B00000111
	.byte	^B00001000, ^B00001001, ^B00001010, ^B00001011
	.byte	^B00001100, ^B00001101, ^B00001110, ^B00001111
	; off-screen palettes
	.byte	^B00000000


End:	.end	Start
